rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Teams - members can read, creators/admins can write
    match /teams/{teamId} {
      allow read: if request.auth != null && 
        request.auth.uid in resource.data.members[].userId;
      allow write: if request.auth != null && 
        (request.auth.uid == resource.data.createdBy ||
         request.auth.uid in resource.data.admins);
    }
    
    // Calendar events - team members can read, creators can write
    match /calendar-events/{eventId} {
      allow read: if request.auth != null &&
        exists(/databases/$(database)/documents/teams/$(resource.data.teamId)) &&
        request.auth.uid in get(/databases/$(database)/documents/teams/$(resource.data.teamId)).data.members[].userId;
      allow write: if request.auth != null &&
        (request.auth.uid == resource.data.createdBy ||
         request.auth.uid in get(/databases/$(database)/documents/teams/$(resource.data.teamId)).data.admins);
    }
    
    // Availability events - team members can read, creators can write
    match /availability-events/{eventId} {
      allow read: if request.auth != null &&
        (request.auth.uid in resource.data.participants ||
         resource.data.allowAnonymous == true);
      allow write: if request.auth != null &&
        request.auth.uid == resource.data.createdBy;
      allow create: if request.auth != null &&
        request.auth.uid == request.resource.data.createdBy;
    }
    
    // Availability responses - users can manage their own responses
    match /availability-responses/{eventId}/responses/{userId} {
      allow read: if request.auth != null &&
        exists(/databases/$(database)/documents/availability-events/$(eventId));
      allow write: if request.auth != null &&
        (request.auth.uid == userId ||
         get(/databases/$(database)/documents/availability-events/$(eventId)).data.allowAnonymous == true);
    }
    
    // Availability analytics - readable by event participants
    match /availability-analytics/{eventId} {
      allow read: if request.auth != null &&
        exists(/databases/$(database)/documents/availability-events/$(eventId)) &&
        request.auth.uid in get(/databases/$(database)/documents/availability-events/$(eventId)).data.participants;
      allow write: if false; // Analytics are computed server-side only
    }
    
    // Default deny all other documents
    match /{document=**} {
      allow read, write: if false;
    }
  }
}